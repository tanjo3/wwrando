name: Build

on:
  push:
    branches: [ master, s5-tournament ]
  pull_request:
    branches: [ master, s5-tournament ]

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        architecture: [ x64 ]

    steps:
      - uses: actions/checkout@v2
      - name: Add seed key
        run: echo "$env:SEED_KEY" > keys/seed_key.py
        env:
          SEED_KEY: ${{ secrets.SEED_KEY }}
      - name: Add release key
        run: echo "$env:RELEASE_KEY" > keys/build_key.txt
        env:
          RELEASE_KEY: ${{ secrets.RELEASE_KEY }}
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: ${{ matrix.architecture }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements_full.txt
      - name: Set variables
        id: vars
        run: |
          echo "::set-output name=version::$(cat version.txt)"
          echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"
      - name: Set architecture variables
        id: archvars
        run: |
          echo "::set-output name=bitness::$(python -c "import struct; print(struct.calcsize('P') * 8)")"
      - name: Build Windows App
        run: python -m PyInstaller --log-level=WARN wwrando.spec
      - name: Bundle Windows App
        run: python build.py
      - name: Upload Windows App
        uses: actions/upload-artifact@v2
        with:
          name: wwrando-${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.sha_short }}-windows-${{ steps.archvars.outputs.bitness }}bit
          path: dist/release_archive_${{ steps.vars.outputs.version }}_${{ steps.archvars.outputs.bitness }}bit/*

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        architecture: [ x64 ]

    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MACOSX_DEPLOYMENT_TARGET: 10.9

    steps:
      - uses: actions/checkout@v2
      - name: Add seed key
        run: echo "$SEED_KEY" > keys/seed_key.py
        env:
          SEED_KEY: ${{ secrets.SEED_KEY }}
      - name: Add release key
        run: echo "$RELEASE_KEY" > keys/build_key.txt
        env:
          RELEASE_KEY: ${{ secrets.RELEASE_KEY }}
      - name: Set up Miniconda with Python 3.9
        uses: goanpeca/setup-miniconda@v1
        with:
          python-version: 3.9
          architecture: ${{ matrix.architecture }}
          miniconda-version: latest
          auto-update-conda: true
      - run: |
          conda create -qyf -n py39 python=3.9 wheel -c anaconda
          conda activate py39
        shell: bash -l {0}
      - name: Install dependencies
        run: |
          conda install pip
          python3 -m pip install -r requirements_full.txt
        shell: bash -l {0}
      - name: Set variables
        id: vars
        run: |
          echo "::set-output name=version::$(cat version.txt)"
          echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"
      - name: Set architecture variables
        id: archvars
        run: |
          echo "::set-output name=bitness::$(python3 -c "import struct; print(struct.calcsize('P') * 8)")"
      - name: Build MacOS App
        run: python3 -m PyInstaller --log-level=WARN --onefile --windowed wwrando.spec
        shell: bash -l {0}
      - name: Bundle MacOS App
        run: python3 build.py
        shell: bash -l {0}
      - uses: actions/upload-artifact@v2
        with:
          name: wwrando-${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.sha_short }}-macos-${{ steps.archvars.outputs.bitness }}bit
          path: dist/release_archive_${{ steps.vars.outputs.version }}_${{ steps.archvars.outputs.bitness }}bit.zip

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [ x64 ]

    steps:
      - uses: actions/checkout@v2
      - name: Add seed key
        run: echo "$SEED_KEY" > keys/seed_key.py
        env:
          SEED_KEY: ${{ secrets.SEED_KEY }}
      - name: Add release key
        run: echo "$RELEASE_KEY" > keys/build_key.txt
        env:
          RELEASE_KEY: ${{ secrets.RELEASE_KEY }}
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: ${{ matrix.architecture }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements_full.txt
      - name: Install any missing Qt dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qtbase5-dev
      - name: Set variables
        id: vars
        run: |
          echo "::set-output name=version::$(cat version.txt)"
          echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"
      - name: Set architecture variables
        id: archvars
        run: |
          echo "::set-output name=bitness::$(python -c "import struct; print(struct.calcsize('P') * 8)")"
      - name: Build Linux App
        run: python -m PyInstaller --log-level=WARN wwrando.spec
      - name: Bundle Linux App
        run: python build.py
      - uses: actions/upload-artifact@v2
        with:
          name: wwrando-${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.sha_short }}-linux-${{ steps.archvars.outputs.bitness }}bit
          path: dist/release_archive_${{ steps.vars.outputs.version }}_${{ steps.archvars.outputs.bitness }}bit/*
